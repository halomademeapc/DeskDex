@model DeskDex.Models.StationViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2>Edit @Html.DisplayFor(model => model.Station.Location)</h2>

    <nav class="breadcrumb my-3">
        @Html.ActionLink("DeskDex", "Index", "Home", null, new { @class = "breadcrumb-item" })
        <span class="breadcrumb-item">Management</span>
        @Html.ActionLink("Stations", "Index", "Stations", null, new { @class = "breadcrumb-item" })
        @Html.ActionLink(Model.Station.Location, "Details", "Stations", new { id = Model.Station.ID }, new { @class = "breadcrumb-item" })
        <span class="breadcrumb-item active">Edit</span>
    </nav>

    <div class="py-1"></div>

    @using (Html.BeginForm("Edit", "Stations", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Station.ID)

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.PhysicalAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.PhysicalAddress)
            @Html.ValidationMessageFor(model => model.Station.PhysicalAddress, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.Location)
            @Html.ValidationMessageFor(model => model.Station.Location, "", new { @class = "text-danger" })

        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.Floor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.Floor)
            @Html.ValidationMessageFor(model => model.Station.Floor, "", new { @class = "text-danger" })

        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.Capacity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.Capacity)
            @Html.ValidationMessageFor(model => model.Station.Capacity, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.x1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.x1)
            @Html.ValidationMessageFor(model => model.Station.x1, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.y1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.y1)
            @Html.ValidationMessageFor(model => model.Station.y1, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.x2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.x2)
            @Html.ValidationMessageFor(model => model.Station.x2, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            @Html.EditorFor(model => model.Station.y2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.LabelFor(model => model.Station.y2)
            @Html.ValidationMessageFor(model => model.Station.y2, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.selectedWorkStyle, "Type")
            <div>@Html.DropDownListFor(model => model.selectedWorkStyle, Model.AllWorkStyles, new { @class = "form-control" })</div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.AllEquipment, "Equipment")
            <div>@Html.ListBoxFor(m => m.SelectedEquipment, Model.AllEquipment, new { @class = "form-control" })</div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.File)
            <div>@Html.TextBoxFor(model => model.File, new { type = "file", accept = "image/*", @class = "form-control-file" })</div>
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>

        <div class="md-form form-group col-md-4">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
